<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lsp.helloworld.dao.LOrderDao">
  <resultMap id="BaseResultMap" type="com.lsp.helloworld.entity.LOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_sn" jdbcType="VARCHAR" property="orderSn" />
    <result column="tag" jdbcType="INTEGER" property="tag" />
    <result column="coupon_seq" jdbcType="VARCHAR" property="couponSeq" />
    <result column="seller_type" jdbcType="INTEGER" property="sellerType" />
    <result column="seller_id" jdbcType="BIGINT" property="sellerId" />
    <result column="seller_sn" jdbcType="VARCHAR" property="sellerSn" />
    <result column="buyer_type" jdbcType="INTEGER" property="buyerType" />
    <result column="buyer_id" jdbcType="BIGINT" property="buyerId" />
    <result column="buyer_sn" jdbcType="VARCHAR" property="buyerSn" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="latitude" jdbcType="DOUBLE" property="latitude" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="discount_amount" jdbcType="INTEGER" property="discountAmount" />
    <result column="pay_amount" jdbcType="INTEGER" property="payAmount" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="pay_type" jdbcType="BIT" property="payType" />
    <result column="pay_order_sn" jdbcType="VARCHAR" property="payOrderSn" />
    <result column="is_first" jdbcType="INTEGER" property="isFirst" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="refund_time" jdbcType="TIMESTAMP" property="refundTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_sn, tag, coupon_seq, seller_type, seller_id, seller_sn, buyer_type, buyer_id, 
    buyer_sn, longitude, latitude, price, discount_amount, pay_amount, num, `status`, 
    pay_type, pay_order_sn, is_first, add_time, update_time, pay_time, refund_time
  </sql>
  <select id="selectByExample" parameterType="com.lsp.helloworld.entity.LOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from l_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from l_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from l_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lsp.helloworld.entity.LOrderExample">
    delete from l_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lsp.helloworld.entity.LOrder">
    insert into l_order (id, order_sn, tag, 
      coupon_seq, seller_type, seller_id, 
      seller_sn, buyer_type, buyer_id, 
      buyer_sn, longitude, latitude, 
      price, discount_amount, pay_amount, 
      num, `status`, pay_type, pay_order_sn, 
      is_first, add_time, update_time, 
      pay_time, refund_time)
    values (#{id,jdbcType=BIGINT}, #{orderSn,jdbcType=VARCHAR}, #{tag,jdbcType=INTEGER}, 
      #{couponSeq,jdbcType=VARCHAR}, #{sellerType,jdbcType=INTEGER}, #{sellerId,jdbcType=BIGINT}, 
      #{sellerSn,jdbcType=VARCHAR}, #{buyerType,jdbcType=INTEGER}, #{buyerId,jdbcType=BIGINT}, 
      #{buyerSn,jdbcType=VARCHAR}, #{longitude,jdbcType=DOUBLE}, #{latitude,jdbcType=DOUBLE}, 
      #{price,jdbcType=INTEGER}, #{discountAmount,jdbcType=INTEGER}, #{payAmount,jdbcType=INTEGER}, 
      #{num,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{payType,jdbcType=BIT}, #{payOrderSn,jdbcType=VARCHAR}, 
      #{isFirst,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{payTime,jdbcType=TIMESTAMP}, #{refundTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lsp.helloworld.entity.LOrder">
    insert into l_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderSn != null">
        order_sn,
      </if>
      <if test="tag != null">
        tag,
      </if>
      <if test="couponSeq != null">
        coupon_seq,
      </if>
      <if test="sellerType != null">
        seller_type,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="sellerSn != null">
        seller_sn,
      </if>
      <if test="buyerType != null">
        buyer_type,
      </if>
      <if test="buyerId != null">
        buyer_id,
      </if>
      <if test="buyerSn != null">
        buyer_sn,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="discountAmount != null">
        discount_amount,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="payOrderSn != null">
        pay_order_sn,
      </if>
      <if test="isFirst != null">
        is_first,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="refundTime != null">
        refund_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderSn != null">
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=INTEGER},
      </if>
      <if test="couponSeq != null">
        #{couponSeq,jdbcType=VARCHAR},
      </if>
      <if test="sellerType != null">
        #{sellerType,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="sellerSn != null">
        #{sellerSn,jdbcType=VARCHAR},
      </if>
      <if test="buyerType != null">
        #{buyerType,jdbcType=INTEGER},
      </if>
      <if test="buyerId != null">
        #{buyerId,jdbcType=BIGINT},
      </if>
      <if test="buyerSn != null">
        #{buyerSn,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="discountAmount != null">
        #{discountAmount,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=BIT},
      </if>
      <if test="payOrderSn != null">
        #{payOrderSn,jdbcType=VARCHAR},
      </if>
      <if test="isFirst != null">
        #{isFirst,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundTime != null">
        #{refundTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lsp.helloworld.entity.LOrderExample" resultType="java.lang.Integer">
    select count(1) from l_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update l_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderSn != null">
        order_sn = #{record.orderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.tag != null">
        tag = #{record.tag,jdbcType=INTEGER},
      </if>
      <if test="record.couponSeq != null">
        coupon_seq = #{record.couponSeq,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerType != null">
        seller_type = #{record.sellerType,jdbcType=INTEGER},
      </if>
      <if test="record.sellerId != null">
        seller_id = #{record.sellerId,jdbcType=BIGINT},
      </if>
      <if test="record.sellerSn != null">
        seller_sn = #{record.sellerSn,jdbcType=VARCHAR},
      </if>
      <if test="record.buyerType != null">
        buyer_type = #{record.buyerType,jdbcType=INTEGER},
      </if>
      <if test="record.buyerId != null">
        buyer_id = #{record.buyerId,jdbcType=BIGINT},
      </if>
      <if test="record.buyerSn != null">
        buyer_sn = #{record.buyerSn,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=DOUBLE},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=DOUBLE},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.discountAmount != null">
        discount_amount = #{record.discountAmount,jdbcType=INTEGER},
      </if>
      <if test="record.payAmount != null">
        pay_amount = #{record.payAmount,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=BIT},
      </if>
      <if test="record.payOrderSn != null">
        pay_order_sn = #{record.payOrderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.isFirst != null">
        is_first = #{record.isFirst,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundTime != null">
        refund_time = #{record.refundTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update l_order
    set id = #{record.id,jdbcType=BIGINT},
      order_sn = #{record.orderSn,jdbcType=VARCHAR},
      tag = #{record.tag,jdbcType=INTEGER},
      coupon_seq = #{record.couponSeq,jdbcType=VARCHAR},
      seller_type = #{record.sellerType,jdbcType=INTEGER},
      seller_id = #{record.sellerId,jdbcType=BIGINT},
      seller_sn = #{record.sellerSn,jdbcType=VARCHAR},
      buyer_type = #{record.buyerType,jdbcType=INTEGER},
      buyer_id = #{record.buyerId,jdbcType=BIGINT},
      buyer_sn = #{record.buyerSn,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=DOUBLE},
      latitude = #{record.latitude,jdbcType=DOUBLE},
      price = #{record.price,jdbcType=INTEGER},
      discount_amount = #{record.discountAmount,jdbcType=INTEGER},
      pay_amount = #{record.payAmount,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER},
      pay_type = #{record.payType,jdbcType=BIT},
      pay_order_sn = #{record.payOrderSn,jdbcType=VARCHAR},
      is_first = #{record.isFirst,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      refund_time = #{record.refundTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lsp.helloworld.entity.LOrder">
    update l_order
    <set>
      <if test="orderSn != null">
        order_sn = #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=INTEGER},
      </if>
      <if test="couponSeq != null">
        coupon_seq = #{couponSeq,jdbcType=VARCHAR},
      </if>
      <if test="sellerType != null">
        seller_type = #{sellerType,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="sellerSn != null">
        seller_sn = #{sellerSn,jdbcType=VARCHAR},
      </if>
      <if test="buyerType != null">
        buyer_type = #{buyerType,jdbcType=INTEGER},
      </if>
      <if test="buyerId != null">
        buyer_id = #{buyerId,jdbcType=BIGINT},
      </if>
      <if test="buyerSn != null">
        buyer_sn = #{buyerSn,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="discountAmount != null">
        discount_amount = #{discountAmount,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=BIT},
      </if>
      <if test="payOrderSn != null">
        pay_order_sn = #{payOrderSn,jdbcType=VARCHAR},
      </if>
      <if test="isFirst != null">
        is_first = #{isFirst,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundTime != null">
        refund_time = #{refundTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lsp.helloworld.entity.LOrder">
    update l_order
    set order_sn = #{orderSn,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=INTEGER},
      coupon_seq = #{couponSeq,jdbcType=VARCHAR},
      seller_type = #{sellerType,jdbcType=INTEGER},
      seller_id = #{sellerId,jdbcType=BIGINT},
      seller_sn = #{sellerSn,jdbcType=VARCHAR},
      buyer_type = #{buyerType,jdbcType=INTEGER},
      buyer_id = #{buyerId,jdbcType=BIGINT},
      buyer_sn = #{buyerSn,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DOUBLE},
      latitude = #{latitude,jdbcType=DOUBLE},
      price = #{price,jdbcType=INTEGER},
      discount_amount = #{discountAmount,jdbcType=INTEGER},
      pay_amount = #{payAmount,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=BIT},
      pay_order_sn = #{payOrderSn,jdbcType=VARCHAR},
      is_first = #{isFirst,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      refund_time = #{refundTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>